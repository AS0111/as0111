a(newcastle, carlile, 58).
a(carlile, penrith, 23).
a(darlington, newcastle, 40).
a(penrith, darlington, 52).
a(worthington, carlile, 33).
a(worthington, penrith, 39).

a(X, Y) :- a(X, Y, Z).

join([], L, L).
join([X|L1], L2, [X|L3]) :- join(L1, L2, L3).

%обр
conversion([], []).
conversion([H|T], L) :- conversion(T, Z), join(Z, [H], L).

transition(Start, Goal, Way) :- transition0(Start, Goal, [], R), conversion(R, Way).
transition0(X, X, T, [X|T]).
transition0(Place, Y, T, R) :- nexthost(Place, T, Neighbour), transition0(Neighbour, Y, [Place|T], R).

nexthost(X, Been, Y) :- (a(X, Y); a(Y, X)), not(member(Y, Been)).


переход (Старт,Цель,Путь):-переход3([г(0,[Старт])],Цель,R), обр(R,Путь).
переходЗ (Пути,Цель,Путь):-кратчайший (Пути,Кратчайший,ОстПути), продлить(Кратчайший,Цель,ОстПути,Путь).
продлить(г(Расст,Путь),Цель,_,Путь):- Путь = [Цель|_].
продлить(г(Расст,[Послед| Бывали]),Цель,Пути,Путь):-найтивсе(г(D1,[Z,Послед| Бывали]),следузел(Послед,Бывали,Z,Расст,D1),Список), присоединить(Список,Пути,НовПути), переходЗ(НовПути,Цель,Пути).
кратчайший([Путь[Пути],Кратчайший,[ПутьЮст]):-кратчайший(Пути,Кратчайший,Ост), короче(Кратчайший,Путь),!.
кратчайший(Путь|Ост],Путь,Ост). короче(г(М1,_),г(М2, _):- M1 ‹ М2.
следузел(Х,Бывали,Y,Расст,НовРасст):-(a(X,Y,Z); a(Y,X,Z)),not(принадлежит(Y,Бывали)),НовРасст is Расст+Z.
